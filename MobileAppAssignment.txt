import React, { useState } from "react";
import { StyleSheet,Text,View,TextInput,Button,FlatList,TouchableOpacity,} from "react-native";
import { Checkbox } from "react-native-paper";
import { AntDesign, Feather } from "@expo/vector-icons";
import AsyncStorage from "@react-native-async-storage/async-storage";

export default function App() {
  const [todoList, setTodoList] = useState([]);
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [searchList, setSearchList] = useState();

  const handleChange = (e, setState) => {
    setState(e);
  };

  const handlerSubmit = async () => {
    if ((description && title) !== "") {
      let newTodoItems = [
        ...todoList,
        { title: title, description: description, status: false },
      ];
      setTodoList(newTodoItems);
      await AsyncStorage.setItem("List", JSON.stringify(newTodoItems));
    }
  };

  const DeleteData = (item) => {
    const deleteTodo = todoList.filter((data, index) => index != item);
    setTodoList(deleteTodo);
  };

  const ChangeStatus = (item) => {
    const previsousData = {
      description: item?.item?.description,
      title: item?.item?.title,
      status: !item?.item?.status,
    };
    const doneTask = todoList.filter((data, index) => index != item?.index);
    let newTodoItems = [...doneTask, previsousData];
    setTodoList(newTodoItems);
  };
  const SearchTitle = (e) => {
    console.log(e);
    const searchListValue = todoList.filter((data) => data?.title == e);
    console.log("Search List Value", searchListValue);
    setSearchList([searchListValue]);
  };
  const TodoData = (item) => {
    console.log("ITEM", item);
    return (
      <>
        <View style={{ paddingHorizontal: 10,paddingVertical: 10, borderRadius: 5,backgroundColor: "#F6F7F9",marginVertical: 10,alignItems: "center",borderWidth: 1,flexDirection: "row",justifyContent: "space-between",}}>
          <View>
            <Checkbox status={item?.item?.status ? "checked" : "unchecked"} onPress={() => { ChangeStatus(item); }}/>
          </View>
          <View>
            <Text>{item?.item?.title}</Text>
            <Text>{item?.item?.description}</Text>
          </View>
          <TouchableOpacity onPress={() => DeleteData(item?.index)}>
            <AntDesign name="delete" size={24} color="black" />
          </TouchableOpacity>
        </View>
      </>
    );
  };
  return (
    <>
      <View style={styles.container}>
        <View style={{alignItems: "center",justifyContent: "center",marginVertical: 10,}}>
          <Text style={{ fontSize: 25 }}>To-Do List</Text>
        </View>
        <View style={{borderWidth: 3,borderColor: "red",borderRadius: 12,backgroundColor: "#F5B7B1",paddingHorizontal: 20,paddingVertical: 15,}}>
          <TextInput placeholder="Enter Title" onChangeText={(change) => handleChange(change, setTitle)}/>
          <TextInput placeholder="Enter Description" onChangeText={(change) => handleChange(change, setDescription)}/>
        </View>
        <View style={{marginTop: 10,justifyContent: "flex-end",alignItems: "flex-end",}}>
          <TouchableOpacity onPress={handlerSubmit}
            style={{ borderWidth: 3,width: "30%",alignItems: "center",justifyContent: "center",paddingHorizontal: 10,paddingVertical: 10,borderColor: "#660000",borderRadius: 10,backgroundColor: "#F5B7B1",}}>
            <Text style={{ color: "black" }}>Add Task</Text>
          </TouchableOpacity>
        </View>
        <View
          style={{borderWidth: 3,borderColor: "#009966",borderRadius: 5,backgroundColor: "#F6F7F9",paddingHorizontal: 20,paddingVertical: 5,marginTop: 6,flexDirection: "row",justifyContent: "space-between",}}>
          <TextInput placeholder="Search Task" onChangeText={(change) => SearchTitle(change)}/>
        </View>
          <FlatList extraData={todoList}  renderItem={TodoData} data={todoList}/>
      </View>
    </>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    marginTop: 50,
    paddingHorizontal: 20,
  },
});